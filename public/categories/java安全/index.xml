<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java安全 on GSBP&#39;s Blog</title>
    <link>http://localhost:1313/categories/java%E5%AE%89%E5%85%A8/</link>
    <description>Recent content in Java安全 on GSBP&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 23 Jan 2025 23:33:31 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/java%E5%AE%89%E5%85%A8/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SpringAOP链学习</title>
      <link>http://localhost:1313/post/springaop/</link>
      <pubDate>Thu, 23 Jan 2025 23:33:31 +0800</pubDate>
      <guid>http://localhost:1313/post/springaop/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;&#xA;&lt;p&gt;在浏览文章的时候看见有师傅发现了一条仅依赖于Springboot中的SpringAOP的链，于是自己调试学习了一下&lt;/p&gt;&#xA;&lt;h2 id=&#34;正文&#34;&gt;正文&lt;/h2&gt;&#xA;&lt;p&gt;依赖于Spring-AOP和aspectjweaver两个包，但是springboot中的spring-boot-starter-aop自带包含这俩类，可以说是和Jackson一样通杀springboot的链子了&lt;/p&gt;&#xA;&lt;h3 id=&#34;流程&#34;&gt;流程&lt;/h3&gt;&#xA;&lt;p&gt;调用链如下&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;JdkDynamicAopProxy.invoke()-&amp;gt;&#xD;&#xA;ReflectiveMethodInvocation.proceed()-&amp;gt;&#xD;&#xA;AspectJAroundAdvice-&amp;gt;invoke-&amp;gt;&#xD;&#xA;org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod()-&amp;gt;&#xD;&#xA;method.invoke()&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;执行类是&lt;code&gt;org.springframework.aop.aspectj.AbstractAspectJAdvice&lt;/code&gt;的&lt;strong&gt;invokeAdviceMethodWithGivenArgs&lt;/strong&gt;方法&lt;/p&gt;&#xA;&lt;p&gt;![image-20250123020448769](/Users/gsbp/Library/Application Support/typora-user-images/image-20250123020448769.png)&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;    protected Object invokeAdviceMethodWithGivenArgs(Object[] args) throws Throwable {&#xD;&#xA;        Object[] actualArgs = args;&#xD;&#xA;        if (this.aspectJAdviceMethod.getParameterCount() == 0) {&#xD;&#xA;            actualArgs = null;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        try {&#xD;&#xA;            ReflectionUtils.makeAccessible(this.aspectJAdviceMethod);&#xD;&#xA;            return this.aspectJAdviceMethod.invoke(this.aspectInstanceFactory.getAspectInstance(), actualArgs);&#xD;&#xA;        } catch (IllegalArgumentException ex) {&#xD;&#xA;            throw new AopInvocationException(&amp;#34;Mismatch on arguments to advice method [&amp;#34; + this.aspectJAdviceMethod + &amp;#34;]; pointcut expression [&amp;#34; + this.pointcut.getPointcutExpression() + &amp;#34;]&amp;#34;, ex);&#xD;&#xA;        } catch (InvocationTargetException ex) {&#xD;&#xA;            throw ex.getTargetException();&#xD;&#xA;        }&#xD;&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;直接在AOP依赖下的一个sink点，有着反射执行任意方法的能力，操作空间很大&lt;/p&gt;</description>
    </item>
    <item>
      <title>JDK17打Jackson&#43;LdapAttruibute反序列化</title>
      <link>http://localhost:1313/post/jdk17%E6%89%93jackson&#43;ldapattruibute%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</link>
      <pubDate>Mon, 20 Jan 2025 03:02:14 +0800</pubDate>
      <guid>http://localhost:1313/post/jdk17%E6%89%93jackson&#43;ldapattruibute%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</guid>
      <description>&lt;h2 id=&#34;起因&#34;&gt;起因&lt;/h2&gt;&#xA;&lt;p&gt;本月五号的时候打了个软件攻防赛，里面有道java当时没做出来，用的ldapAttribute+Jackson死活没通，后面自己调试了一下，这里做个记录&lt;/p&gt;&#xA;&lt;h2 id=&#34;题目分析&#34;&gt;题目分析&lt;/h2&gt;&#xA;&lt;p&gt;题目名叫&lt;code&gt;JDBCParty&lt;/code&gt;,jdk版本是17，里面给了个接口源码如下&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;    @PostMapping({&amp;#34;/dbtest&amp;#34;})&#xA;    public ResponseEntity&amp;lt;String&amp;gt; dbtest(String data) {&#xA;        try {&#xA;            User credentials = (User)Utils.deserialize(data);&#xA;            Class.forName(this.driverClassName);&#xA;&#xA;            try (Connection connection = DriverManager.getConnection(this.url, credentials.getUsername(), credentials.getPassword())) {&#xA;                if (connection.isValid(5)) {&#xA;                    return ResponseEntity.ok(&amp;#34;connect success&amp;#34;);&#xA;                } else {&#xA;                    return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(&amp;#34;connect failed&amp;#34;);&#xA;                }&#xA;            }&#xA;        } catch (Exception e) {&#xA;            e.printStackTrace();&#xA;            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(&amp;#34;connect failed &amp;#34; + e.getMessage());&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;表面上是给了个JDBC的入口，但是我们能控的只有username和password，打不了jdbc。&lt;/p&gt;&#xA;&lt;p&gt;实际入口是那个反序列化，从这个反序列化里面做文章&lt;/p&gt;&#xA;&lt;p&gt;然后看看题目给的依赖&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;- &amp;#34;BOOT-INF/lib/spring-boot-3.3.5.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/spring-boot-autoconfigure-3.3.5.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/logback-classic-1.5.11.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/logback-core-1.5.11.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/log4j-to-slf4j-2.23.1.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/log4j-api-2.23.1.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/jul-to-slf4j-2.0.16.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/jakarta.annotation-api-2.1.1.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/snakeyaml-2.2.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/jackson-databind-2.17.2.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/jackson-annotations-2.17.2.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/jackson-core-2.17.2.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/jackson-datatype-jdk8-2.17.2.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/jackson-datatype-jsr310-2.17.2.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/jackson-module-parameter-names-2.17.2.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/tomcat-embed-core-10.1.31.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/tomcat-embed-el-10.1.31.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/tomcat-embed-websocket-10.1.31.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/spring-web-6.1.14.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/spring-beans-6.1.14.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/micrometer-observation-1.13.6.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/micrometer-commons-1.13.6.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/spring-webmvc-6.1.14.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/spring-aop-6.1.14.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/spring-context-6.1.14.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/spring-expression-6.1.14.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/thymeleaf-spring6-3.1.2.RELEASE.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/thymeleaf-3.1.2.RELEASE.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/attoparser-2.0.7.RELEASE.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/unbescape-1.1.6.RELEASE.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/slf4j-api-2.0.16.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/spring-core-6.1.14.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/spring-jcl-6.1.14.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/ojdbc11-21.14.0.0.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/tomcat-jdbc-10.1.31.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/tomcat-juli-10.1.31.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/batik-swing-1.14.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/batik-anim-1.14.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/batik-parser-1.14.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/batik-svg-dom-1.14.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/batik-awt-util-1.14.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/xmlgraphics-commons-2.6.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/commons-io-1.3.1.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/commons-logging-1.0.4.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/batik-bridge-1.14.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/batik-xml-1.14.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/batik-css-1.14.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/batik-dom-1.14.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/xalan-2.7.2.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/serializer-2.7.2.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/xml-apis-1.4.01.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/batik-ext-1.14.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/batik-gui-util-1.14.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/batik-gvt-1.14.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/batik-script-1.14.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/batik-shared-resources-1.14.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/batik-util-1.14.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/batik-constants-1.14.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/batik-i18n-1.14.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/xml-apis-ext-1.3.04.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/fastjson2-2.0.37.jar&amp;#34;&#xA;- &amp;#34;BOOT-INF/lib/spring-boot-jarmode-tools-3.3.5.jar&amp;#34;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;有tomcat-jdbc,snakeYaml,EL,Jackson和fastjson2等等，题目指向性很强，就是让我们用一个JNDI通过Tomcat-JDBC打EL，snakeYaml表达式注入的操作&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
